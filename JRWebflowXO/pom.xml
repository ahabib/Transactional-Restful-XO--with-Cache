<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <artifactId>jrxoprototype</artifactId>
    <groupId>net.johnraber</groupId>
    <version>1.0-SNAPSHOT</version>
  </parent>
  <artifactId>JRWebflowXO</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <packaging>war</packaging>
  <name>JRWebflowXO</name>
  <description />
	<properties>
		<org.springframework.version>3.1.2.RELEASE</org.springframework.version>
		<org.springframework.security.version>3.1.1.RELEASE</org.springframework.security.version>
		<org.springframework.webflow.version>2.3.1.RELEASE</org.springframework.webflow.version>
	  <org.hibernate.version>4.1.6.Final</org.hibernate.version>
	</properties>
	<build>
		<finalName>JRWebflowXO</finalName>
	   <!--   <sourceDirectory>src</sourceDirectory>  -->
	    <plugins>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.3</version>
				<configuration>
          <webResources>
            <resource>
              <!-- this is relative to the pom.xml directory -->
              <directory>src/main/webapp/WEB-INF</directory>
              <targetPath>WEB-INF/classes/META-INF</targetPath>
              <includes>
                <include>**/persistence.xml</include>
              </includes>
            </resource>
          </webResources>
				</configuration>
				<!--  <executions>
         don't pack the war so I can develop/deploy fast on app server 
           <execution>
               <id>war-exploded</id>
               <phase>package</phase>
               <goals>
                   <goal>exploded</goal>
               </goals>
           </execution>
        </executions>
        -->
	    </plugin>
	    <plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.6</version>
			</plugin>
				<!--  
				<plugin>
				    <groupId>org.apache.maven.plugins</groupId>
				    <artifactId>maven-ejb-plugin</artifactId>
				    <configuration>
				        <ejbVersion>3.0</ejbVersion>
				    </configuration>
				</plugin>
				 -->
	    </plugins>
	  </build>
	  <dependencies>
	  
	  	<!--  
	  	<dependency>
			<groupId>javax.ejb</groupId>
			<artifactId>ejb-api</artifactId>
			<version>3.0</version>
			<scope>provided</scope>
		</dependency>
		
		
		<dependency>
		  <groupId>org.jboss.javaee</groupId>
		  <artifactId>jboss-ejb-api_3.1</artifactId>
		  <version>1.0-alpha-1</version>
		</dependency>
		-->
		
		<!--  running on JBoss 7 so use latest ejb spec -->
		<dependency>
		  <groupId>org.jboss.spec.javax.ejb</groupId>
		  <artifactId>jboss-ejb-api_3.1_spec</artifactId>
		  <version>1.0.2.Final</version>
		</dependency>
		
		<dependency>
			<groupId>jboss</groupId>
			<artifactId>jboss-annotations-ejb3</artifactId>
			<version>4.2.3.GA</version>
			<scope>provided</scope>
		</dependency>
		
	  <!-- running in Tomcat 7 or JBoss AS 7 and want to use
	       latest servlet spec  -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
			<scope>provided</scope>
		</dependency>
		
		<dependency>
		  <groupId>javax.jms</groupId>
		  <artifactId>javax.jms-api</artifactId>
		  <version>2.0-b06</version>
		</dependency>
		
		<!--  including btm in this web context for transaction mgr
		      so jta is a dependency 
		<dependency>
			<groupId>javax.transaction</groupId>
			<artifactId>jta</artifactId>
			<version>1.1</version>
  	</dependency>
  	-->
  	 
  	 <!--
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>1.9.0</version>
			<scope>test</scope>
		</dependency>
				-->
				
			<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.web.servlet</artifactId>
			<version>${org.springframework.version}</version>
	      <scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.orm</artifactId>
			<version>${org.springframework.version}</version>
	      <scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.transaction</artifactId>
			<version>${org.springframework.version}</version>
	      <scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.aop</artifactId>
			<version>${org.springframework.version}</version>
	      <scope>compile</scope>
		</dependency>
		
		<!--  needed by Spring AOP to proxy concrete classes ...i.e. POJOs with @Controller annotation -->
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
			<version>2.2.2</version>
		</dependency>
    
		 <!--
	    Various Application Context utilities, including EhCache, JavaMail, Quartz, and 
	    Freemarker integration.  Define this if you need any of these integrations
		-->
		<dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-context-support</artifactId>
		  <version>${org.springframework.version}</version>
		</dependency>
		
		<!--
    Object-to-XML Mapping (OXM) abstraction and integration with JAXB, JiBX, Castor, XStream, and XML Beans.
    (depends on spring-core, spring-beans, spring-context)
    Define this if you need OXM (org.springframework.oxm.*)  	-->
		<dependency>
		  <groupId>com.thoughtworks.xstream</groupId>
		  <artifactId>xstream</artifactId>
		  <version>1.4.3</version>
		</dependency>
		<dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-oxm</artifactId>
		  <version>${org.springframework.version}</version>
		</dependency>
	
 
    <!-- SECURITY -->
		<dependency>
		    <groupId>org.springframework.security</groupId>
		    <artifactId>spring-security-core</artifactId>
		    <version>${org.springframework.security.version}</version>
		 </dependency> 
		 <dependency>
		    <groupId>org.springframework.security</groupId>
		    <artifactId>spring-security-web</artifactId>
		    <version>${org.springframework.security.version}</version>
		 </dependency> 
		 <dependency>
		    <groupId>org.springframework.security</groupId>
		    <artifactId>spring-security-config</artifactId>
		    <version>${org.springframework.security.version}</version>
		 </dependency>
		 
		 
		 <dependency>
		    <groupId>org.springframework.webflow</groupId>
		    <artifactId>spring-webflow</artifactId>
		    <version>${org.springframework.webflow.version}</version>
		 </dependency> 
		 
		 <!--  support client's with request header 'accept' set to 'application/json' -->
		 <dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.9.9</version>
		</dependency>
		
		<!--  uncomment if using Bitronix for Txn Mgr
		<dependency>
	        <groupId> org.codehaus.btm</groupId>
	        <artifactId>btm</artifactId>
	        <version>2.1.3</version>
		</dependency>
		-->
		<!-- needed to configure Tomcat to start and stop
		     the transaction mgr 
		<dependency>
	        <groupId> org.codehaus.btm</groupId>
	        <artifactId>btm-tomcat55-lifecycle</artifactId>
	        <version>2.1.3</version>
		</dependency>
		-->
		
		<dependency>  
		  <groupId>org.hibernate</groupId>  
		  <artifactId>hibernate-core</artifactId>  
		  <version>${org.hibernate.version}</version>  
		</dependency>  
		<dependency>  
		  <groupId>org.hibernate</groupId>  
		  <artifactId>hibernate-entitymanager</artifactId>  
			<version>${org.hibernate.version}</version>
		</dependency>  
		<dependency>
			<groupId>org.hibernate.javax.persistence</groupId>
	    <artifactId>hibernate-jpa-2.1-api</artifactId>
	    <version>1.0.0.Draft-7plus</version>
    </dependency>
		<dependency>  
		    <groupId>org.hibernate</groupId>  
		    <artifactId>hibernate-ehcache</artifactId>  
		    <version>${org.hibernate.version}</version>
		</dependency> 
		<dependency>  
		    <groupId>net.sf.ehcache</groupId>  
		    <artifactId>ehcache-core</artifactId>  
		    <version>2.6.0</version>
		</dependency>
		<dependency>  
		    <groupId>net.sf.ehcache</groupId>  
		    <artifactId>ehcache-web</artifactId>  
		    <version>2.0.4</version>
		</dependency> 
		
		<!-- design/code to JSR 107 API -->
		<dependency>  
		    <groupId>net.sf.ehcache</groupId>  
		    <artifactId>ehcache-jcache</artifactId>  
		    <version>1.4.0-beta1</version>
		</dependency> 
    
    <!-- declare as provided or exclude from spring jars -->
    <dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1</version>
			<scope>provided</scope>
		</dependency>
		
		<!-- add slf4j interfaces to classpath -->
		<dependency>
        <groupId> org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>1.6.6</version>
		</dependency>
		
		<!-- add commons logging to slf4j bridge to classpath --> 
    <!-- acts as jcl but routes commons-logging calls to slf4j -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>1.6.6</version>
		</dependency>
		
		<!-- add log4j binding to classpath -->
    <!-- routes slf4j calls to log4j -->
		<dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-log4j12</artifactId>
        <version>1.6.6</version>
		</dependency> 
		
		<!-- add log4j to classpath -->
    <!-- does the logging -->
    <dependency>
        <groupId>log4j</groupId>
        <artifactId>log4j</artifactId>
        <version>1.2.17</version>
		</dependency> 
		
	  <dependency>
        <groupId>postgresql</groupId>
        <artifactId>postgresql</artifactId>
        <version>9.1-902.jdbc4</version>
        <scope>provided</scope>
		</dependency> 
		
	<!--  
	<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.2.1</version>
		</dependency> 
	-->	
	
	<!-- Need this for the Reflection builder for toString() -->
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>2.6</version>
		</dependency> 
		
	  <!-- Messaging infra 	
		<dependency>
		  <groupId>org.apache.activemq</groupId>
		  <artifactId>activemq-core</artifactId>
		  <version>5.7.0</version>
   	 <exclusions>
        <exclusion>
            <artifactId>javax.servlet</artifactId>
            <groupId>servlet-api</groupId>
        </exclusion>
        <exclusion>
            <groupId>org.apache.activemq</groupId>
            <artifactId>activeio-core</artifactId>
        </exclusion>
        <exclusion>
            <groupId>org.apache.activemq</groupId>
            <artifactId>kahadb</artifactId>
        </exclusion>
        <exclusion>
            <groupId>org.jasypt</groupId>
            <artifactId>jasypt</artifactId>
        </exclusion>
        <exclusion>
            <groupId>org.apache.activemq.protobuf</groupId>
            <artifactId>activemq-protobuf</artifactId>
        </exclusion>
        <exclusion>
            <groupId>commons-net</groupId>
            <artifactId>commons-net</artifactId>
        </exclusion>
        <exclusion>
            <groupId>org.osgi</groupId>
            <artifactId>org.osgi.core</artifactId>
        </exclusion>
        <exclusion>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty</artifactId>
        </exclusion>
        <exclusion>
            <groupId>org.mortbay.jetty</groupId>
            <artifactId>jetty-util</artifactId>
        </exclusion>
        <exclusion>
            <groupId>org.fusesource.mqtt-client</groupId>
            <artifactId>mqtt-client</artifactId>
        </exclusion>
        <exclusion>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-core</artifactId>
        </exclusion>
        <exclusion>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </exclusion>
        <exclusion>
            <groupId>org.apache.geronimo.specs</groupId>
            <artifactId>geronimo-jms_1.1_spec</artifactId>
        </exclusion>
     
        <exclusion>
            <groupId>org.apache.geronimo.specs</groupId>
            <artifactId>geronimo-j2ee-management_1.1_spec</artifactId>
        </exclusion>
        
        <exclusion>
            <groupId>org.fusesource.fuse-extra</groupId>
            <artifactId>fusemq-leveldb</artifactId>
        </exclusion>
    	</exclusions>
	  </dependency>
	    -->
  </dependencies>
</project>